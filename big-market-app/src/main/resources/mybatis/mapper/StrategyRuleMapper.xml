<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mql.infrastructure.persistent.dao.StrategyRuleMapper">

    <resultMap id="BaseResultMap" type="com.mql.infrastructure.persistent.po.StrategyRule">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="strategyId" column="strategy_id" jdbcType="INTEGER"/>
            <result property="awardId" column="award_id" jdbcType="INTEGER"/>
            <result property="ruleType" column="rule_type" jdbcType="TINYINT"/>
            <result property="ruleModel" column="rule_model" jdbcType="VARCHAR"/>
            <result property="ruleValue" column="rule_value" jdbcType="VARCHAR"/>
            <result property="ruleDesc" column="rule_desc" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,strategy_id,award_id,
        rule_type,rule_model,rule_value,
        rule_desc,create_time,update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from strategy_rule
        where  id = #{id,jdbcType=BIGINT} 
    </select>
    <select id="queryStrategyRule" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from strategy_rule
        where  strategy_id = #{strategyId,jdbcType=BIGINT} and rule_model = #{ruleModel,jdbcType=VARCHAR}

    </select>
    <select id="queryStrategyRuleValue" resultType="java.lang.String">
        select rule_value from strategy_rule
        where  strategy_id = #{strategyId,jdbcType=BIGINT} and rule_model = #{ruleModel,jdbcType=VARCHAR}
        <if test="awardId != null">
            and award_id = #{awardId,jdbcType=INTEGER}
        </if>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from strategy_rule
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="StrategyRule" useGeneratedKeys="true">
        insert into strategy_rule
        ( id,strategy_id,award_id
        ,rule_type,rule_model,rule_value
        ,rule_desc,create_time,update_time
        )
        values (#{id,jdbcType=BIGINT},#{strategyId,jdbcType=INTEGER},#{awardId,jdbcType=INTEGER}
        ,#{ruleType,jdbcType=TINYINT},#{ruleModel,jdbcType=VARCHAR},#{ruleValue,jdbcType=VARCHAR}
        ,#{ruleDesc,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="StrategyRule" useGeneratedKeys="true">
        insert into strategy_rule
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="strategyId != null">strategy_id,</if>
                <if test="awardId != null">award_id,</if>
                <if test="ruleType != null">rule_type,</if>
                <if test="ruleModel != null">rule_model,</if>
                <if test="ruleValue != null">rule_value,</if>
                <if test="ruleDesc != null">rule_desc,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="strategyId != null">#{strategyId,jdbcType=INTEGER},</if>
                <if test="awardId != null">#{awardId,jdbcType=INTEGER},</if>
                <if test="ruleType != null">#{ruleType,jdbcType=TINYINT},</if>
                <if test="ruleModel != null">#{ruleModel,jdbcType=VARCHAR},</if>
                <if test="ruleValue != null">#{ruleValue,jdbcType=VARCHAR},</if>
                <if test="ruleDesc != null">#{ruleDesc,jdbcType=VARCHAR},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="StrategyRule">
        update strategy_rule
        <set>
                <if test="strategyId != null">
                    strategy_id = #{strategyId,jdbcType=INTEGER},
                </if>
                <if test="awardId != null">
                    award_id = #{awardId,jdbcType=INTEGER},
                </if>
                <if test="ruleType != null">
                    rule_type = #{ruleType,jdbcType=TINYINT},
                </if>
                <if test="ruleModel != null">
                    rule_model = #{ruleModel,jdbcType=VARCHAR},
                </if>
                <if test="ruleValue != null">
                    rule_value = #{ruleValue,jdbcType=VARCHAR},
                </if>
                <if test="ruleDesc != null">
                    rule_desc = #{ruleDesc,jdbcType=VARCHAR},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="StrategyRule">
        update strategy_rule
        set 
            strategy_id =  #{strategyId,jdbcType=INTEGER},
            award_id =  #{awardId,jdbcType=INTEGER},
            rule_type =  #{ruleType,jdbcType=TINYINT},
            rule_model =  #{ruleModel,jdbcType=VARCHAR},
            rule_value =  #{ruleValue,jdbcType=VARCHAR},
            rule_desc =  #{ruleDesc,jdbcType=VARCHAR},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
