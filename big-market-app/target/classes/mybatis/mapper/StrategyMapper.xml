<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mql.infrastructure.persistent.dao.StrategyMapper">

    <resultMap id="BaseResultMap" type="com.mql.infrastructure.persistent.po.Strategy">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="strategyId" column="strategy_id" jdbcType="BIGINT"/>
        <result property="strategyDesc" column="strategy_desc" jdbcType="VARCHAR"/>
        <result property="ruleModels" column="rule_models" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,strategy_id,strategy_desc,rule_models,
        create_time,update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from strategy
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <select id="queryStrategyByStrategyId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from strategy
        where  strategy_id = #{strategyId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from strategy
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="Strategy" useGeneratedKeys="true">
        insert into strategy
        ( id,strategy_id,strategy_desc
        ,create_time,update_time)
        values (#{id,jdbcType=BIGINT},#{strategyId,jdbcType=BIGINT},#{strategyDesc,jdbcType=VARCHAR}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="Strategy" useGeneratedKeys="true">
        insert into strategy
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="strategyId != null">strategy_id,</if>
                <if test="strategyDesc != null">strategy_desc,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="strategyId != null">#{strategyId,jdbcType=BIGINT},</if>
                <if test="strategyDesc != null">#{strategyDesc,jdbcType=VARCHAR},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Strategy">
        update strategy
        <set>
                <if test="strategyId != null">
                    strategy_id = #{strategyId,jdbcType=BIGINT},
                </if>
                <if test="strategyDesc != null">
                    strategy_desc = #{strategyDesc,jdbcType=VARCHAR},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="Strategy">
        update strategy
        set 
            strategy_id =  #{strategyId,jdbcType=BIGINT},
            strategy_desc =  #{strategyDesc,jdbcType=VARCHAR},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
